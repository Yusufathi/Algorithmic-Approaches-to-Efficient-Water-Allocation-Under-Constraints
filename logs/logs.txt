2025-01-05 15:50:54,416 - Execution Start
2025-01-05 15:50:54,417 - Test Case: Test Case 1: Simple Allocation
2025-01-05 15:50:54,417 -   Technique: FordFulkersonAllocation
2025-01-05 15:50:54,417 -   Water Supply: 1000
2025-01-05 15:50:54,418 -   Demands: {'R1': 400, 'R2': 300, 'R3': 500}
2025-01-05 15:50:54,418 -   Pipeline Losses: {'R1': 0.05, 'R2': 0.03, 'R3': 0.07}
2025-01-05 15:50:54,418 -   Output: {'R1': 380, 'R2': 291, 'R3': 305}
2025-01-05 15:50:54,418 -   Supplied Ratio: {'R1': 0.95, 'R2': 0.97, 'R3': 0.61}
2025-01-05 15:50:54,418 -   Metrics: {'util': 0.98, 'loss': 0.95, 'fairness': 0.84, 'overall': 0.93}
2025-01-05 15:50:54,418 -   Analysis: {'Time': 0.0002 Seconds, 'Space': 0.0030 MB}
2025-01-05 15:50:54,418 - ----------------------------------------------------------------------------------------------------
2025-01-05 15:50:54,418 -   Technique: ProportionalAllocation
2025-01-05 15:50:54,418 -   Water Supply: 1000
2025-01-05 15:50:54,419 -   Demands: {'R1': 400, 'R2': 300, 'R3': 500}
2025-01-05 15:50:54,419 -   Pipeline Losses: {'R1': 0.05, 'R2': 0.03, 'R3': 0.07}
2025-01-05 15:50:54,419 -   Output: {'R1': 312.28, 'R2': 235.46, 'R3': 388.26}
2025-01-05 15:50:54,419 -   Supplied Ratio: {'R1': 0.78, 'R2': 0.78, 'R3': 0.78}
2025-01-05 15:50:54,419 -   Metrics: {'util': 1, 'loss': 1, 'fairness': 1, 'overall': 1}
2025-01-05 15:50:54,419 -   Analysis: {'Time': 0.0001 Seconds, 'Space': 0.0006 MB}
2025-01-05 15:50:54,419 - ----------------------------------------------------------------------------------------------------
2025-01-05 15:50:54,419 - Test Case: Test Case 2: Limited Supply
2025-01-05 15:50:54,420 -   Technique: FordFulkersonAllocation
2025-01-05 15:50:54,420 -   Water Supply: 800
2025-01-05 15:50:54,420 -   Demands: {'R1': 300, 'R2': 200, 'R3': 250, 'R4': 200}
2025-01-05 15:50:54,420 -   Pipeline Losses: {'R1': 0.1, 'R2': 0.05, 'R3': 0.08, 'R4': 0.12}
2025-01-05 15:50:54,420 -   Output: {'R1': 270, 'R2': 190, 'R3': 230, 'R4': 96}
2025-01-05 15:50:54,420 -   Supplied Ratio: {'R1': 0.9, 'R2': 0.95, 'R3': 0.92, 'R4': 0.48}
2025-01-05 15:50:54,420 -   Metrics: {'util': 0.98, 'loss': 0.91, 'fairness': 0.81, 'overall': 0.91}
2025-01-05 15:50:54,420 -   Analysis: {'Time': 0.0001 Seconds, 'Space': 0.0040 MB}
2025-01-05 15:50:54,420 - ----------------------------------------------------------------------------------------------------
2025-01-05 15:50:54,420 -   Technique: ProportionalAllocation
2025-01-05 15:50:54,421 -   Water Supply: 800
2025-01-05 15:50:54,421 -   Demands: {'R1': 300, 'R2': 200, 'R3': 250, 'R4': 200}
2025-01-05 15:50:54,421 -   Pipeline Losses: {'R1': 0.1, 'R2': 0.05, 'R3': 0.08, 'R4': 0.12}
2025-01-05 15:50:54,421 -   Output: {'R1': 225.32, 'R2': 152.48, 'R3': 188.9, 'R4': 149.31}
2025-01-05 15:50:54,421 -   Supplied Ratio: {'R1': 0.75, 'R2': 0.76, 'R3': 0.76, 'R4': 0.75}
2025-01-05 15:50:54,421 -   Metrics: {'util': 1, 'loss': 1, 'fairness': 1, 'overall': 1}
2025-01-05 15:50:54,421 -   Analysis: {'Time': 0.0000 Seconds, 'Space': 0.0006 MB}
2025-01-05 15:50:54,421 - ----------------------------------------------------------------------------------------------------
2025-01-05 15:50:54,421 - Test Case: Test Case 3: High Loss Rates
2025-01-05 15:50:54,421 -   Technique: FordFulkersonAllocation
2025-01-05 15:50:54,421 -   Water Supply: 500
2025-01-05 15:50:54,421 -   Demands: {'R1': 300, 'R2': 200}
2025-01-05 15:50:54,422 -   Pipeline Losses: {'R1': 0.2, 'R2': 0.15}
2025-01-05 15:50:54,422 -   Output: {'R1': 240, 'R2': 170}
2025-01-05 15:50:54,422 -   Supplied Ratio: {'R1': 0.8, 'R2': 0.85}
2025-01-05 15:50:54,422 -   Metrics: {'util': 0.82, 'loss': 0.82, 'fairness': 0.82, 'overall': 0.82}
2025-01-05 15:50:54,422 -   Analysis: {'Time': 0.0001 Seconds, 'Space': 0.0023 MB}
2025-01-05 15:50:54,422 - ----------------------------------------------------------------------------------------------------
2025-01-05 15:50:54,422 -   Technique: ProportionalAllocation
2025-01-05 15:50:54,422 -   Water Supply: 500
2025-01-05 15:50:54,422 -   Demands: {'R1': 300, 'R2': 200}
2025-01-05 15:50:54,422 -   Pipeline Losses: {'R1': 0.2, 'R2': 0.15}
2025-01-05 15:50:54,422 -   Output: {'R1': 245.08, 'R2': 164.92}
2025-01-05 15:50:54,422 -   Supplied Ratio: {'R1': 0.82, 'R2': 0.82}
2025-01-05 15:50:54,422 -   Metrics: {'util': 1, 'loss': 1, 'fairness': 1, 'overall': 1}
2025-01-05 15:50:54,423 -   Analysis: {'Time': 0.0000 Seconds, 'Space': 0.0006 MB}
2025-01-05 15:50:54,423 - ----------------------------------------------------------------------------------------------------
2025-01-05 15:50:54,423 - Test Case: Test Case 4: Equal Demands and Losses
2025-01-05 15:50:54,423 -   Technique: FordFulkersonAllocation
2025-01-05 15:50:54,424 -   Water Supply: 1200
2025-01-05 15:50:54,424 -   Demands: {'R1': 400, 'R2': 400, 'R3': 400}
2025-01-05 15:50:54,424 -   Pipeline Losses: {'R1': 0.1, 'R2': 0.1, 'R3': 0.1}
2025-01-05 15:50:54,424 -   Output: {'R1': 360, 'R2': 360, 'R3': 360}
2025-01-05 15:50:54,424 -   Supplied Ratio: {'R1': 0.9, 'R2': 0.9, 'R3': 0.9}
2025-01-05 15:50:54,424 -   Metrics: {'util': 0.9, 'loss': 0.9, 'fairness': 0.9, 'overall': 0.9}
2025-01-05 15:50:54,424 -   Analysis: {'Time': 0.0002 Seconds, 'Space': 0.0030 MB}
2025-01-05 15:50:54,424 - ----------------------------------------------------------------------------------------------------
2025-01-05 15:50:54,424 -   Technique: ProportionalAllocation
2025-01-05 15:50:54,424 -   Water Supply: 1200
2025-01-05 15:50:54,425 -   Demands: {'R1': 400, 'R2': 400, 'R3': 400}
2025-01-05 15:50:54,425 -   Pipeline Losses: {'R1': 0.1, 'R2': 0.1, 'R3': 0.1}
2025-01-05 15:50:54,425 -   Output: {'R1': 360.0, 'R2': 360.0, 'R3': 360.0}
2025-01-05 15:50:54,425 -   Supplied Ratio: {'R1': 0.9, 'R2': 0.9, 'R3': 0.9}
2025-01-05 15:50:54,425 -   Metrics: {'util': 1, 'loss': 1, 'fairness': 1, 'overall': 1}
2025-01-05 15:50:54,425 -   Analysis: {'Time': 0.0000 Seconds, 'Space': 0.0006 MB}
2025-01-05 15:50:54,425 - ----------------------------------------------------------------------------------------------------
2025-01-05 15:50:54,425 - Test Case: Test Case 5: Zero Loss
2025-01-05 15:50:54,425 -   Technique: FordFulkersonAllocation
2025-01-05 15:50:54,425 -   Water Supply: 500
2025-01-05 15:50:54,425 -   Demands: {'R1': 250, 'R2': 250}
2025-01-05 15:50:54,425 -   Pipeline Losses: {'R1': 0.0, 'R2': 0.0}
2025-01-05 15:50:54,426 -   Output: {'R1': 250, 'R2': 250}
2025-01-05 15:50:54,426 -   Supplied Ratio: {'R1': 1.0, 'R2': 1.0}
2025-01-05 15:50:54,426 -   Metrics: {'util': 1.0, 'loss': 1.0, 'fairness': 1.0, 'overall': 1.0}
2025-01-05 15:50:54,426 -   Analysis: {'Time': 0.0001 Seconds, 'Space': 0.0020 MB}
2025-01-05 15:50:54,426 - ----------------------------------------------------------------------------------------------------
2025-01-05 15:50:54,426 -   Technique: ProportionalAllocation
2025-01-05 15:50:54,426 -   Water Supply: 500
2025-01-05 15:50:54,426 -   Demands: {'R1': 250, 'R2': 250}
2025-01-05 15:50:54,426 -   Pipeline Losses: {'R1': 0.0, 'R2': 0.0}
2025-01-05 15:50:54,426 -   Output: {'R1': 250.0, 'R2': 250.0}
2025-01-05 15:50:54,426 -   Supplied Ratio: {'R1': 1.0, 'R2': 1.0}
2025-01-05 15:50:54,426 -   Metrics: {'util': 1, 'loss': 1, 'fairness': 1, 'overall': 1}
2025-01-05 15:50:54,426 -   Analysis: {'Time': 0.0000 Seconds, 'Space': 0.0006 MB}
2025-01-05 15:50:54,426 - ----------------------------------------------------------------------------------------------------
2025-01-05 15:50:54,426 - Test Case: Test Case 6: Excess Supply
2025-01-05 15:50:54,427 -   Technique: FordFulkersonAllocation
2025-01-05 15:50:54,427 -   Water Supply: 1500
2025-01-05 15:50:54,427 -   Demands: {'R1': 300, 'R2': 300, 'R3': 300, 'R4': 300}
2025-01-05 15:50:54,427 -   Pipeline Losses: {'R1': 0.05, 'R2': 0.05, 'R3': 0.05, 'R4': 0.05}
2025-01-05 15:50:54,427 -   Output: {'R1': 285, 'R2': 285, 'R3': 285, 'R4': 285}
2025-01-05 15:50:54,427 -   Supplied Ratio: {'R1': 0.95, 'R2': 0.95, 'R3': 0.95, 'R4': 0.95}
2025-01-05 15:50:54,427 -   Metrics: {'util': 0.76, 'loss': 0.96, 'fairness': 0.95, 'overall': 0.89}
2025-01-05 15:50:54,427 -   Analysis: {'Time': 0.0001 Seconds, 'Space': 0.0043 MB}
2025-01-05 15:50:54,427 - ----------------------------------------------------------------------------------------------------
2025-01-05 15:50:54,427 -   Technique: ProportionalAllocation
2025-01-05 15:50:54,428 -   Water Supply: 1500
2025-01-05 15:50:54,428 -   Demands: {'R1': 300, 'R2': 300, 'R3': 300, 'R4': 300}
2025-01-05 15:50:54,428 -   Pipeline Losses: {'R1': 0.05, 'R2': 0.05, 'R3': 0.05, 'R4': 0.05}
2025-01-05 15:50:54,428 -   Output: {'R1': 300.0, 'R2': 300.0, 'R3': 300.0, 'R4': 300.0}
2025-01-05 15:50:54,428 -   Supplied Ratio: {'R1': 1.0, 'R2': 1.0, 'R3': 1.0, 'R4': 1.0}
2025-01-05 15:50:54,428 -   Metrics: {'util': 1, 'loss': 1, 'fairness': 1, 'overall': 1}
2025-01-05 15:50:54,428 -   Analysis: {'Time': 0.0000 Seconds, 'Space': 0.0006 MB}
2025-01-05 15:50:54,428 - ----------------------------------------------------------------------------------------------------
2025-01-05 15:50:54,428 - Test Case: Test Case 7: Unequal Demands with High Supply
2025-01-05 15:50:54,428 -   Technique: FordFulkersonAllocation
2025-01-05 15:50:54,428 -   Water Supply: 2000
2025-01-05 15:50:54,428 -   Demands: {'R1': 800, 'R2': 600, 'R3': 400}
2025-01-05 15:50:54,428 -   Pipeline Losses: {'R1': 0.1, 'R2': 0.15, 'R3': 0.05}
2025-01-05 15:50:54,429 -   Output: {'R1': 720, 'R2': 510, 'R3': 380}
2025-01-05 15:50:54,429 -   Supplied Ratio: {'R1': 0.9, 'R2': 0.85, 'R3': 0.95}
2025-01-05 15:50:54,429 -   Metrics: {'util': 0.81, 'loss': 0.91, 'fairness': 0.9, 'overall': 0.87}
2025-01-05 15:50:54,429 -   Analysis: {'Time': 0.0001 Seconds, 'Space': 0.0030 MB}
2025-01-05 15:50:54,429 - ----------------------------------------------------------------------------------------------------
2025-01-05 15:50:54,429 -   Technique: ProportionalAllocation
2025-01-05 15:50:54,429 -   Water Supply: 2000
2025-01-05 15:50:54,429 -   Demands: {'R1': 800, 'R2': 600, 'R3': 400}
2025-01-05 15:50:54,429 -   Pipeline Losses: {'R1': 0.1, 'R2': 0.15, 'R3': 0.05}
2025-01-05 15:50:54,429 -   Output: {'R1': 800.0, 'R2': 600.0, 'R3': 400.0}
2025-01-05 15:50:54,429 -   Supplied Ratio: {'R1': 1.0, 'R2': 1.0, 'R3': 1.0}
2025-01-05 15:50:54,429 -   Metrics: {'util': 1, 'loss': 1, 'fairness': 1, 'overall': 1}
2025-01-05 15:50:54,429 -   Analysis: {'Time': 0.0000 Seconds, 'Space': 0.0006 MB}
2025-01-05 15:50:54,430 - ----------------------------------------------------------------------------------------------------
2025-01-05 15:50:54,430 - Test Case: Test Case 8: All Regions with Same Losses
2025-01-05 15:50:54,430 -   Technique: FordFulkersonAllocation
2025-01-05 15:50:54,430 -   Water Supply: 1000
2025-01-05 15:50:54,430 -   Demands: {'R1': 200, 'R2': 200, 'R3': 300, 'R4': 300}
2025-01-05 15:50:54,432 -   Pipeline Losses: {'R1': 0.1, 'R2': 0.1, 'R3': 0.1, 'R4': 0.1}
2025-01-05 15:50:54,432 -   Output: {'R1': 180, 'R2': 180, 'R3': 270, 'R4': 270}
2025-01-05 15:50:54,432 -   Supplied Ratio: {'R1': 0.9, 'R2': 0.9, 'R3': 0.9, 'R4': 0.9}
2025-01-05 15:50:54,432 -   Metrics: {'util': 0.9, 'loss': 0.9, 'fairness': 0.9, 'overall': 0.9}
2025-01-05 15:50:54,432 -   Analysis: {'Time': 0.0001 Seconds, 'Space': 0.0040 MB}
2025-01-05 15:50:54,432 - ----------------------------------------------------------------------------------------------------
2025-01-05 15:50:54,433 -   Technique: ProportionalAllocation
2025-01-05 15:50:54,433 -   Water Supply: 1000
2025-01-05 15:50:54,433 -   Demands: {'R1': 200, 'R2': 200, 'R3': 300, 'R4': 300}
2025-01-05 15:50:54,433 -   Pipeline Losses: {'R1': 0.1, 'R2': 0.1, 'R3': 0.1, 'R4': 0.1}
2025-01-05 15:50:54,433 -   Output: {'R1': 180.0, 'R2': 180.0, 'R3': 270.0, 'R4': 270.0}
2025-01-05 15:50:54,433 -   Supplied Ratio: {'R1': 0.9, 'R2': 0.9, 'R3': 0.9, 'R4': 0.9}
2025-01-05 15:50:54,433 -   Metrics: {'util': 1, 'loss': 1, 'fairness': 1, 'overall': 1}
2025-01-05 15:50:54,433 -   Analysis: {'Time': 0.0001 Seconds, 'Space': 0.0006 MB}
2025-01-05 15:50:54,434 - ----------------------------------------------------------------------------------------------------
2025-01-05 15:50:54,434 - Test Case: Test Case 9: Unequal Losses and Demands
2025-01-05 15:50:54,434 -   Technique: FordFulkersonAllocation
2025-01-05 15:50:54,434 -   Water Supply: 2000
2025-01-05 15:50:54,434 -   Demands: {'R1': 500, 'R2': 400, 'R3': 300, 'R4': 200, 'R5': 100}
2025-01-05 15:50:54,434 -   Pipeline Losses: {'R1': 0.05, 'R2': 0.1, 'R3': 0.15, 'R4': 0.2, 'R5': 0.25}
2025-01-05 15:50:54,434 -   Output: {'R1': 475, 'R2': 360, 'R3': 255, 'R4': 160, 'R5': 75}
2025-01-05 15:50:54,434 -   Supplied Ratio: {'R1': 0.95, 'R2': 0.9, 'R3': 0.85, 'R4': 0.8, 'R5': 0.75}
2025-01-05 15:50:54,434 -   Metrics: {'util': 0.66, 'loss': 0.91, 'fairness': 0.85, 'overall': 0.81}
2025-01-05 15:50:54,435 -   Analysis: {'Time': 0.0001 Seconds, 'Space': 0.0048 MB}
2025-01-05 15:50:54,435 - ----------------------------------------------------------------------------------------------------
2025-01-05 15:50:54,435 -   Technique: ProportionalAllocation
2025-01-05 15:50:54,435 -   Water Supply: 2000
2025-01-05 15:50:54,435 -   Demands: {'R1': 500, 'R2': 400, 'R3': 300, 'R4': 200, 'R5': 100}
2025-01-05 15:50:54,435 -   Pipeline Losses: {'R1': 0.05, 'R2': 0.1, 'R3': 0.15, 'R4': 0.2, 'R5': 0.25}
2025-01-05 15:50:54,435 -   Output: {'R1': 500.0, 'R2': 400.0, 'R3': 300.0, 'R4': 200.0, 'R5': 100.0}
2025-01-05 15:50:54,435 -   Supplied Ratio: {'R1': 1.0, 'R2': 1.0, 'R3': 1.0, 'R4': 1.0, 'R5': 1.0}
2025-01-05 15:50:54,435 -   Metrics: {'util': 1, 'loss': 1, 'fairness': 1, 'overall': 1}
2025-01-05 15:50:54,435 -   Analysis: {'Time': 0.0000 Seconds, 'Space': 0.0006 MB}
2025-01-05 15:50:54,435 - ----------------------------------------------------------------------------------------------------
2025-01-05 15:50:54,435 - Test Case: Test Case 10: Zero Demand
2025-01-05 15:50:54,436 -   Technique: FordFulkersonAllocation
2025-01-05 15:50:54,436 -   Water Supply: 500
2025-01-05 15:50:54,436 -   Demands: {'R1': 0, 'R2': 200, 'R3': 300}
2025-01-05 15:50:54,436 -   Pipeline Losses: {'R1': 0.05, 'R2': 0.1, 'R3': 0.2}
2025-01-05 15:50:54,436 -   Output: {'R1': 0, 'R2': 180, 'R3': 240}
2025-01-05 15:50:54,436 -   Supplied Ratio: {'R1': None, 'R2': 0.9, 'R3': 0.8}
2025-01-05 15:50:54,436 -   Metrics: {'util': 0.84, 'loss': 0.84, 'fairness': 0.85, 'overall': 0.84}
2025-01-05 15:50:54,436 -   Analysis: {'Time': 0.0001 Seconds, 'Space': 0.0024 MB}
2025-01-05 15:50:54,436 - ----------------------------------------------------------------------------------------------------
2025-01-05 15:50:54,436 -   Technique: ProportionalAllocation
2025-01-05 15:50:54,436 -   Water Supply: 500
2025-01-05 15:50:54,436 -   Demands: {'R1': 0, 'R2': 200, 'R3': 300}
2025-01-05 15:50:54,436 -   Pipeline Losses: {'R1': 0.05, 'R2': 0.1, 'R3': 0.2}
2025-01-05 15:50:54,436 -   Output: {'R1': 0.0, 'R2': 169.66, 'R3': 250.34}
2025-01-05 15:50:54,436 -   Supplied Ratio: {'R1': None, 'R2': 0.85, 'R3': 0.83}
2025-01-05 15:50:54,436 -   Metrics: {'util': 1, 'loss': 1, 'fairness': 1, 'overall': 1}
2025-01-05 15:50:54,436 -   Analysis: {'Time': 0.0000 Seconds, 'Space': 0.0006 MB}
2025-01-05 15:50:54,437 - ----------------------------------------------------------------------------------------------------
2025-01-05 15:50:54,437 - Test Case: Test Case 11: Extreme Shortage
2025-01-05 15:50:54,437 -   Technique: FordFulkersonAllocation
2025-01-05 15:50:54,437 -   Water Supply: 200
2025-01-05 15:50:54,437 -   Demands: {'R1': 500, 'R2': 300}
2025-01-05 15:50:54,437 -   Pipeline Losses: {'R1': 0.1, 'R2': 0.2}
2025-01-05 15:50:54,437 -   Output: {'R1': 180, 'R2': 16}
2025-01-05 15:50:54,437 -   Supplied Ratio: {'R1': 0.36, 'R2': 0.05}
2025-01-05 15:50:54,437 -   Metrics: {'util': 0.98, 'loss': 0.88, 'fairness': 0.21, 'overall': 0.71}
2025-01-05 15:50:54,437 -   Analysis: {'Time': 0.0000 Seconds, 'Space': 0.0021 MB}
2025-01-05 15:50:54,437 - ----------------------------------------------------------------------------------------------------
2025-01-05 15:50:54,437 -   Technique: ProportionalAllocation
2025-01-05 15:50:54,437 -   Water Supply: 200
2025-01-05 15:50:54,438 -   Demands: {'R1': 500, 'R2': 300}
2025-01-05 15:50:54,438 -   Pipeline Losses: {'R1': 0.1, 'R2': 0.2}
2025-01-05 15:50:54,438 -   Output: {'R1': 70.88, 'R2': 19.12}
2025-01-05 15:50:54,438 -   Supplied Ratio: {'R1': 0.14, 'R2': 0.06}
2025-01-05 15:50:54,438 -   Metrics: {'util': 0, 'loss': 1, 'fairness': 0, 'overall': 1}
2025-01-05 15:50:54,438 -   Analysis: {'Time': 0.0000 Seconds, 'Space': 0.0006 MB}
2025-01-05 15:50:54,438 - ----------------------------------------------------------------------------------------------------
2025-01-05 15:50:54,438 - Test Case: Test Case 12: Balanced Scenario
2025-01-05 15:50:54,438 -   Technique: FordFulkersonAllocation
2025-01-05 15:50:54,438 -   Water Supply: 1000
2025-01-05 15:50:54,438 -   Demands: {'R1': 400, 'R2': 300, 'R3': 300}
2025-01-05 15:50:54,439 -   Pipeline Losses: {'R1': 0.05, 'R2': 0.05, 'R3': 0.05}
2025-01-05 15:50:54,439 -   Output: {'R1': 380, 'R2': 285, 'R3': 285}
2025-01-05 15:50:54,439 -   Supplied Ratio: {'R1': 0.95, 'R2': 0.95, 'R3': 0.95}
2025-01-05 15:50:54,439 -   Metrics: {'util': 0.95, 'loss': 0.95, 'fairness': 0.95, 'overall': 0.95}
2025-01-05 15:50:54,439 -   Analysis: {'Time': 0.0001 Seconds, 'Space': 0.0030 MB}
2025-01-05 15:50:54,439 - ----------------------------------------------------------------------------------------------------
2025-01-05 15:50:54,439 -   Technique: ProportionalAllocation
2025-01-05 15:50:54,439 -   Water Supply: 1000
2025-01-05 15:50:54,439 -   Demands: {'R1': 400, 'R2': 300, 'R3': 300}
2025-01-05 15:50:54,439 -   Pipeline Losses: {'R1': 0.05, 'R2': 0.05, 'R3': 0.05}
2025-01-05 15:50:54,439 -   Output: {'R1': 380.0, 'R2': 285.0, 'R3': 285.0}
2025-01-05 15:50:54,439 -   Supplied Ratio: {'R1': 0.95, 'R2': 0.95, 'R3': 0.95}
2025-01-05 15:50:54,439 -   Metrics: {'util': 1, 'loss': 1, 'fairness': 1, 'overall': 1}
2025-01-05 15:50:54,439 -   Analysis: {'Time': 0.0000 Seconds, 'Space': 0.0006 MB}
2025-01-05 15:50:54,439 - ----------------------------------------------------------------------------------------------------
2025-01-05 15:50:54,439 - Average Time and Space Analysis
2025-01-05 15:50:54,439 - Technique: FordFulkersonAllocation --- Average Time: 0.0001 Seconds --- Average Space: 0.0032 MB
2025-01-05 15:50:54,440 - Technique: ProportionalAllocation --- Average Time: 0.0000 Seconds --- Average Space: 0.0006 MB
2025-01-05 15:50:54,440 - Execution End
2025-01-05 15:50:54,440 - ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
2025-01-05 17:40:08,073 - Execution Start
2025-01-05 17:40:08,073 - Test Case: Test Case 1: Simple Allocation
2025-01-05 17:40:08,073 - Test Case: Test Case 2: Limited Supply
2025-01-05 17:40:08,074 - Test Case: Test Case 3: High Loss Rates
2025-01-05 17:40:08,074 - Test Case: Test Case 4: Equal Demands and Losses
2025-01-05 17:40:08,074 - Test Case: Test Case 5: Zero Loss
2025-01-05 17:40:08,074 - Test Case: Test Case 6: Excess Supply
2025-01-05 17:40:08,074 - Test Case: Test Case 7: Unequal Demands with High Supply
2025-01-05 17:40:08,074 - Test Case: Test Case 8: All Regions with Same Losses
2025-01-05 17:40:08,074 - Test Case: Test Case 9: Unequal Losses and Demands
2025-01-05 17:40:08,074 - Test Case: Test Case 10: Zero Demand
2025-01-05 17:40:08,074 - Test Case: Test Case 11: Extreme Shortage
2025-01-05 17:40:08,074 - Test Case: Test Case 12: Balanced Scenario
2025-01-05 17:40:08,074 - Average Time and Space Analysis
2025-01-05 17:40:08,074 - Execution End
2025-01-05 17:40:08,074 - ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
2025-01-05 17:40:29,970 - Execution Start
2025-01-05 17:40:29,970 - Test Case: Test Case 1: Simple Allocation
2025-01-05 17:41:04,486 -   Technique: GeneticAlgorithmAllocation
2025-01-05 17:41:04,486 -   Water Supply: 1000
2025-01-05 17:41:04,486 -   Demands: {'R1': 400, 'R2': 300, 'R3': 500}
2025-01-05 17:41:04,486 -   Pipeline Losses: {'R1': 0.05, 'R2': 0.03, 'R3': 0.07}
2025-01-05 17:41:04,486 -   Output: {'R1': np.float64(382.1412553504748), 'R2': np.float64(284.3012033968273), 'R3': np.float64(490.6962942425642)}
2025-01-05 17:41:04,486 -   Supplied Ratio: {'R1': np.float64(0.96), 'R2': np.float64(0.95), 'R3': np.float64(0.98)}
2025-01-05 17:41:04,487 -   Metrics: {'util': np.float64(1.1571387529898665), 'loss': np.float64(0.9380151605335919), 'fairness': np.float64(0.9614721349502466), 'overall': np.float64(1.0217455102182844)}
2025-01-05 17:41:04,487 -   Analysis: {'Time': 6.3232 Seconds, 'Space': 0.0277 MB}
2025-01-05 17:41:04,487 - ----------------------------------------------------------------------------------------------------
2025-01-05 17:41:04,487 - Test Case: Test Case 2: Limited Supply
2025-01-05 17:41:36,961 -   Technique: GeneticAlgorithmAllocation
2025-01-05 17:41:36,961 -   Water Supply: 800
2025-01-05 17:41:36,961 -   Demands: {'R1': 300, 'R2': 200, 'R3': 250, 'R4': 200}
2025-01-05 17:41:36,961 -   Pipeline Losses: {'R1': 0.1, 'R2': 0.05, 'R3': 0.08, 'R4': 0.12}
2025-01-05 17:41:36,961 -   Output: {'R1': np.float64(255.2790573871849), 'R2': np.float64(161.25325304212654), 'R3': np.float64(207.89817155362837), 'R4': np.float64(176.03745188671996)}
2025-01-05 17:41:36,961 -   Supplied Ratio: {'R1': np.float64(0.85), 'R2': np.float64(0.81), 'R3': np.float64(0.83), 'R4': np.float64(0.88)}
2025-01-05 17:41:36,962 -   Metrics: {'util': np.float64(1.0005849173370747), 'loss': np.float64(0.9108163545730982), 'fairness': np.float64(0.8422441005373406), 'overall': np.float64(0.9216636753297626)}
2025-01-05 17:41:36,962 -   Analysis: {'Time': 10.4099 Seconds, 'Space': 0.0289 MB}
2025-01-05 17:41:36,962 - ----------------------------------------------------------------------------------------------------
2025-01-05 17:41:36,962 - Test Case: Test Case 3: High Loss Rates
2025-01-05 17:42:03,021 -   Technique: GeneticAlgorithmAllocation
2025-01-05 17:42:03,021 -   Water Supply: 500
2025-01-05 17:42:03,021 -   Demands: {'R1': 300, 'R2': 200}
2025-01-05 17:42:03,021 -   Pipeline Losses: {'R1': 0.2, 'R2': 0.15}
2025-01-05 17:42:03,021 -   Output: {'R1': np.float64(307.2924724966828), 'R2': np.float64(192.88175429491008)}
2025-01-05 17:42:03,021 -   Supplied Ratio: {'R1': np.float64(1.02), 'R2': np.float64(0.96)}
2025-01-05 17:42:03,021 -   Metrics: {'util': np.float64(1.0003484535831857), 'loss': np.float64(0.8192184847128539), 'fairness': np.float64(0.9943585065650798), 'overall': np.float64(0.9351559803731377)}
2025-01-05 17:42:03,021 -   Analysis: {'Time': 5.8366 Seconds, 'Space': 0.0266 MB}
2025-01-05 17:42:03,022 - ----------------------------------------------------------------------------------------------------
2025-01-05 17:42:03,022 - Test Case: Test Case 4: Equal Demands and Losses
2025-01-05 17:42:30,000 -   Technique: GeneticAlgorithmAllocation
2025-01-05 17:42:30,000 -   Water Supply: 1200
2025-01-05 17:42:30,000 -   Demands: {'R1': 400, 'R2': 400, 'R3': 400}
2025-01-05 17:42:30,000 -   Pipeline Losses: {'R1': 0.1, 'R2': 0.1, 'R3': 0.1}
2025-01-05 17:42:30,000 -   Output: {'R1': np.float64(326.17904771309946), 'R2': np.float64(318.2790539338192), 'R3': np.float64(313.78141620142554)}
2025-01-05 17:42:30,001 -   Supplied Ratio: {'R1': np.float64(0.82), 'R2': np.float64(0.8), 'R3': np.float64(0.78)}
2025-01-05 17:42:30,001 -   Metrics: {'util': np.float64(0.7985329315402869), 'loss': np.float64(0.9201467068459713), 'fairness': np.float64(0.7985329315402867), 'overall': np.float64(0.8410977528972764)}
2025-01-05 17:42:30,001 -   Analysis: {'Time': 6.1392 Seconds, 'Space': 0.0277 MB}
2025-01-05 17:42:30,001 - ----------------------------------------------------------------------------------------------------
2025-01-05 17:42:30,001 - Test Case: Test Case 5: Zero Loss
2025-01-05 17:43:05,615 -   Technique: GeneticAlgorithmAllocation
2025-01-05 17:43:05,615 -   Water Supply: 500
2025-01-05 17:43:05,615 -   Demands: {'R1': 250, 'R2': 250}
2025-01-05 17:43:05,615 -   Pipeline Losses: {'R1': 0.0, 'R2': 0.0}
2025-01-05 17:43:05,615 -   Output: {'R1': np.float64(263.2870446417231), 'R2': np.float64(262.60836953773793)}
2025-01-05 17:43:05,616 -   Supplied Ratio: {'R1': np.float64(1.05), 'R2': np.float64(1.05)}
2025-01-05 17:43:05,616 -   Metrics: {'util': np.float64(1.0517908283589221), 'loss': np.float64(1.0), 'fairness': np.float64(1.0517908283589221), 'overall': np.float64(1.0336640384332993)}
2025-01-05 17:43:05,616 -   Analysis: {'Time': 6.4293 Seconds, 'Space': 0.0262 MB}
2025-01-05 17:43:05,616 - ----------------------------------------------------------------------------------------------------
2025-01-05 17:43:05,616 - Test Case: Test Case 6: Excess Supply
2025-01-05 17:43:37,258 -   Technique: GeneticAlgorithmAllocation
2025-01-05 17:43:37,258 -   Water Supply: 1500
2025-01-05 17:43:37,259 -   Demands: {'R1': 300, 'R2': 300, 'R3': 300, 'R4': 300}
2025-01-05 17:43:37,259 -   Pipeline Losses: {'R1': 0.05, 'R2': 0.05, 'R3': 0.05, 'R4': 0.05}
2025-01-05 17:43:37,259 -   Output: {'R1': np.float64(378.98270389424437), 'R2': np.float64(380.9497057546497), 'R3': np.float64(375.979349790291), 'R4': np.float64(377.11950143049995)}
2025-01-05 17:43:37,259 -   Supplied Ratio: {'R1': np.float64(1.26), 'R2': np.float64(1.27), 'R3': np.float64(1.25), 'R4': np.float64(1.26)}
2025-01-05 17:43:37,259 -   Metrics: {'util': np.float64(1.0086875072464567), 'loss': np.float64(0.9495656246376771), 'fairness': np.float64(1.2608593840580709), 'overall': np.float64(1.063646411376868)}
2025-01-05 17:43:37,260 -   Analysis: {'Time': 8.0872 Seconds, 'Space': 0.0292 MB}
2025-01-05 17:43:37,260 - ----------------------------------------------------------------------------------------------------
2025-01-05 17:43:37,260 - Test Case: Test Case 7: Unequal Demands with High Supply
2025-01-05 17:44:07,039 -   Technique: GeneticAlgorithmAllocation
2025-01-05 17:44:07,039 -   Water Supply: 2000
2025-01-05 17:44:07,039 -   Demands: {'R1': 800, 'R2': 600, 'R3': 400}
2025-01-05 17:44:07,039 -   Pipeline Losses: {'R1': 0.1, 'R2': 0.15, 'R3': 0.05}
2025-01-05 17:44:07,039 -   Output: {'R1': np.float64(638.9524631571326), 'R2': np.float64(518.3900070105401), 'R3': np.float64(292.2912269704077)}
2025-01-05 17:44:07,039 -   Supplied Ratio: {'R1': np.float64(0.8), 'R2': np.float64(0.86), 'R3': np.float64(0.73)}
2025-01-05 17:44:07,039 -   Metrics: {'util': np.float64(0.7248168485690402), 'loss': np.float64(0.9218658456420926), 'fairness': np.float64(0.7978006637966673), 'overall': np.float64(0.8156791421128966)}
2025-01-05 17:44:07,039 -   Analysis: {'Time': 6.6496 Seconds, 'Space': 0.0276 MB}
2025-01-05 17:44:07,039 - ----------------------------------------------------------------------------------------------------
2025-01-05 17:44:07,040 - Test Case: Test Case 8: All Regions with Same Losses
2025-01-05 17:44:41,218 -   Technique: GeneticAlgorithmAllocation
2025-01-05 17:44:41,218 -   Water Supply: 1000
2025-01-05 17:44:41,219 -   Demands: {'R1': 200, 'R2': 200, 'R3': 300, 'R4': 300}
2025-01-05 17:44:41,219 -   Pipeline Losses: {'R1': 0.1, 'R2': 0.1, 'R3': 0.1, 'R4': 0.1}
2025-01-05 17:44:41,219 -   Output: {'R1': np.float64(218.54525580183034), 'R2': np.float64(217.2150098550374), 'R3': np.float64(327.7060009626928), 'R4': np.float64(341.1642801063426)}
2025-01-05 17:44:41,219 -   Supplied Ratio: {'R1': np.float64(1.09), 'R2': np.float64(1.09), 'R3': np.float64(1.09), 'R4': np.float64(1.14)}
2025-01-05 17:44:41,219 -   Metrics: {'util': np.float64(1.1046305467259032), 'loss': np.float64(0.8895369453274097), 'fairness': np.float64(1.1020922329619474), 'overall': np.float64(1.0285862921072437)}
2025-01-05 17:44:41,219 -   Analysis: {'Time': 6.4679 Seconds, 'Space': 0.0294 MB}
2025-01-05 17:44:41,219 - ----------------------------------------------------------------------------------------------------
2025-01-05 17:44:41,219 - Test Case: Test Case 9: Unequal Losses and Demands
2025-01-05 17:45:18,408 -   Technique: GeneticAlgorithmAllocation
2025-01-05 17:45:18,408 -   Water Supply: 2000
2025-01-05 17:45:18,408 -   Demands: {'R1': 500, 'R2': 400, 'R3': 300, 'R4': 200, 'R5': 100}
2025-01-05 17:45:18,408 -   Pipeline Losses: {'R1': 0.05, 'R2': 0.1, 'R3': 0.15, 'R4': 0.2, 'R5': 0.25}
2025-01-05 17:45:18,408 -   Output: {'R1': np.float64(441.0834989995334), 'R2': np.float64(309.24952916294484), 'R3': np.float64(302.7905507042147), 'R4': np.float64(188.23506007815513), 'R5': np.float64(94.32868307478091)}
2025-01-05 17:45:18,408 -   Supplied Ratio: {'R1': np.float64(0.88), 'R2': np.float64(0.77), 'R3': np.float64(1.01), 'R4': np.float64(0.94), 'R5': np.float64(0.94)}
2025-01-05 17:45:18,408 -   Metrics: {'util': np.float64(0.6678436610098145), 'loss': np.float64(0.9201865533718852), 'fairness': np.float64(0.9098109575451458), 'overall': np.float64(0.8287538622971387)}
2025-01-05 17:45:18,408 -   Analysis: {'Time': 7.8839 Seconds, 'Space': 0.0302 MB}
2025-01-05 17:45:18,408 - ----------------------------------------------------------------------------------------------------
2025-01-05 17:45:18,409 - Test Case: Test Case 10: Zero Demand
2025-01-05 17:45:51,454 -   Technique: GeneticAlgorithmAllocation
2025-01-05 17:45:51,455 -   Water Supply: 500
2025-01-05 17:45:51,455 -   Demands: {'R1': 0, 'R2': 200, 'R3': 300}
2025-01-05 17:45:51,455 -   Pipeline Losses: {'R1': 0.05, 'R2': 0.1, 'R3': 0.2}
2025-01-05 17:45:51,455 -   Output: {'R1': np.float64(154.21843091532918), 'R2': np.float64(125.48470889253518), 'R3': np.float64(105.73655451141292)}
2025-01-05 17:45:51,455 -   Supplied Ratio: {'R1': None, 'R2': np.float64(0.63), 'R3': np.float64(0.35)}
2025-01-05 17:45:51,455 -   Metrics: {'util': np.float64(0.7708793886385545), 'loss': np.float64(0.9171865933253949), 'fairness': np.float64(inf), 'overall': np.float64(inf)}
2025-01-05 17:45:51,455 -   Analysis: {'Time': 7.2251 Seconds, 'Space': 0.0283 MB}
2025-01-05 17:45:51,455 - ----------------------------------------------------------------------------------------------------
2025-01-05 17:45:51,455 - Test Case: Test Case 11: Extreme Shortage
2025-01-05 17:46:20,328 -   Technique: GeneticAlgorithmAllocation
2025-01-05 17:46:20,328 -   Water Supply: 200
2025-01-05 17:46:20,328 -   Demands: {'R1': 500, 'R2': 300}
2025-01-05 17:46:20,328 -   Pipeline Losses: {'R1': 0.1, 'R2': 0.2}
2025-01-05 17:46:20,329 -   Output: {'R1': np.float64(106.8918841016762), 'R2': np.float64(72.20180766910109)}
2025-01-05 17:46:20,329 -   Supplied Ratio: {'R1': np.float64(0.21), 'R2': np.float64(0.24)}
2025-01-05 17:46:20,329 -   Metrics: {'util': np.float64(0.8954684588538865), 'loss': np.float64(0.8743522502800608), 'fairness': np.float64(0.22722823021684468), 'overall': np.float64(0.6876057172619349)}
2025-01-05 17:46:20,329 -   Analysis: {'Time': 6.2901 Seconds, 'Space': 0.0264 MB}
2025-01-05 17:46:20,329 - ----------------------------------------------------------------------------------------------------
2025-01-05 17:46:20,329 - Test Case: Test Case 12: Balanced Scenario
2025-01-05 17:46:55,702 -   Technique: GeneticAlgorithmAllocation
2025-01-05 17:46:55,702 -   Water Supply: 1000
2025-01-05 17:46:55,702 -   Demands: {'R1': 400, 'R2': 300, 'R3': 300}
2025-01-05 17:46:55,702 -   Pipeline Losses: {'R1': 0.05, 'R2': 0.05, 'R3': 0.05}
2025-01-05 17:46:55,703 -   Output: {'R1': np.float64(398.9620059926302), 'R2': np.float64(299.685235764663), 'R3': np.float64(299.6200680916358)}
2025-01-05 17:46:55,703 -   Supplied Ratio: {'R1': np.float64(1.0), 'R2': np.float64(1.0), 'R3': np.float64(1.0)}
2025-01-05 17:46:55,703 -   Metrics: {'util': np.float64(0.998267309848929), 'loss': np.float64(0.9500866345075536), 'fairness': np.float64(0.9983631203897461), 'overall': np.float64(0.9814328166416926)}
2025-01-05 17:46:55,703 -   Analysis: {'Time': 7.8444 Seconds, 'Space': 0.0277 MB}
2025-01-05 17:46:55,703 - ----------------------------------------------------------------------------------------------------
2025-01-05 17:46:55,703 - Average Time and Space Analysis
2025-01-05 17:46:55,703 - Technique: GeneticAlgorithmAllocation --- Average Time: 7.1322 Seconds --- Average Space: 0.0280 MB
2025-01-05 17:46:55,703 - Execution End
2025-01-05 17:46:55,703 - ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
2025-01-05 17:54:35,728 - Execution Start
2025-01-05 17:54:35,728 - Test Case: Test Case 1: Simple Allocation
2025-01-05 17:55:07,638 -   Technique: GeneticAlgorithmAllocation
2025-01-05 17:55:07,638 -   Water Supply: 1000
2025-01-05 17:55:07,638 -   Demands: {'R1': 400, 'R2': 300, 'R3': 500}
2025-01-05 17:55:07,638 -   Pipeline Losses: {'R1': 0.05, 'R2': 0.03, 'R3': 0.07}
2025-01-05 17:55:07,638 -   Output: {'R1': np.float64(398.1147084318145), 'R2': np.float64(293.29931026638656), 'R3': np.float64(504.4668683474385)}
2025-01-05 17:55:07,638 -   Supplied Ratio: {'R1': np.float64(1.0), 'R2': np.float64(0.98), 'R3': np.float64(1.01)}
2025-01-05 17:55:07,638 -   Metrics: {'util': np.float64(1.1958808870456397), 'loss': np.float64(0.935982604486097), 'fairness': np.float64(0.9939616251096783), 'overall': np.float64(1.0443407095690114)}
2025-01-05 17:55:07,638 -   Analysis: {'Time': 7.0550 Seconds, 'Space': 0.0277 MB}
2025-01-05 17:55:07,638 - ----------------------------------------------------------------------------------------------------
2025-01-05 17:55:07,638 - Test Case: Test Case 2: Limited Supply
2025-01-05 17:55:37,038 -   Technique: GeneticAlgorithmAllocation
2025-01-05 17:55:37,038 -   Water Supply: 800
2025-01-05 17:55:37,038 -   Demands: {'R1': 300, 'R2': 200, 'R3': 250, 'R4': 200}
2025-01-05 17:55:37,038 -   Pipeline Losses: {'R1': 0.1, 'R2': 0.05, 'R3': 0.08, 'R4': 0.12}
2025-01-05 17:55:37,038 -   Output: {'R1': np.float64(254.33596376943007), 'R2': np.float64(160.59660653170252), 'R3': np.float64(209.66958440810362), 'R4': np.float64(173.5095944656523)}
2025-01-05 17:55:37,039 -   Supplied Ratio: {'R1': np.float64(0.85), 'R2': np.float64(0.8), 'R3': np.float64(0.84), 'R4': np.float64(0.87)}
2025-01-05 17:55:37,039 -   Metrics: {'util': np.float64(0.9976396864686106), 'loss': np.float64(0.9111773190099316), 'fairness': np.float64(0.8392489721293221), 'overall': np.float64(0.9198606435562864)}
2025-01-05 17:55:37,039 -   Analysis: {'Time': 5.9290 Seconds, 'Space': 0.0295 MB}
2025-01-05 17:55:37,039 - ----------------------------------------------------------------------------------------------------
2025-01-05 17:55:37,039 - Test Case: Test Case 3: High Loss Rates
2025-01-05 17:56:08,436 -   Technique: GeneticAlgorithmAllocation
2025-01-05 17:56:08,436 -   Water Supply: 500
2025-01-05 17:56:08,436 -   Demands: {'R1': 300, 'R2': 200}
2025-01-05 17:56:08,437 -   Pipeline Losses: {'R1': 0.2, 'R2': 0.15}
2025-01-05 17:56:08,437 -   Output: {'R1': np.float64(261.0900964869831), 'R2': np.float64(162.81290701251362)}
2025-01-05 17:56:08,437 -   Supplied Ratio: {'R1': np.float64(0.87), 'R2': np.float64(0.81)}
2025-01-05 17:56:08,437 -   Metrics: {'util': np.float64(0.8478060069989934), 'loss': np.float64(0.8467200893014527), 'fairness': np.float64(0.8421824283429226), 'overall': np.float64(0.8457388622080328)}
2025-01-05 17:56:08,437 -   Analysis: {'Time': 9.2846 Seconds, 'Space': 0.0264 MB}
2025-01-05 17:56:08,437 - ----------------------------------------------------------------------------------------------------
2025-01-05 17:56:08,437 - Test Case: Test Case 4: Equal Demands and Losses
2025-01-05 17:56:34,658 -   Technique: GeneticAlgorithmAllocation
2025-01-05 17:56:34,658 -   Water Supply: 1200
2025-01-05 17:56:34,658 -   Demands: {'R1': 400, 'R2': 400, 'R3': 400}
2025-01-05 17:56:34,658 -   Pipeline Losses: {'R1': 0.1, 'R2': 0.1, 'R3': 0.1}
2025-01-05 17:56:34,658 -   Output: {'R1': np.float64(395.0321459462239), 'R2': np.float64(396.90822159813166), 'R3': np.float64(397.96980115049115)}
2025-01-05 17:56:34,658 -   Supplied Ratio: {'R1': np.float64(0.99), 'R2': np.float64(0.99), 'R3': np.float64(0.99)}
2025-01-05 17:56:34,658 -   Metrics: {'util': np.float64(0.9915918072457056), 'loss': np.float64(0.9008408192754295), 'fairness': np.float64(0.9915918072457056), 'overall': np.float64(0.959828961456109)}
2025-01-05 17:56:34,658 -   Analysis: {'Time': 5.7007 Seconds, 'Space': 0.0277 MB}
2025-01-05 17:56:34,659 - ----------------------------------------------------------------------------------------------------
2025-01-05 17:56:34,659 - Test Case: Test Case 5: Zero Loss
2025-01-05 17:57:02,122 -   Technique: GeneticAlgorithmAllocation
2025-01-05 17:57:02,122 -   Water Supply: 500
2025-01-05 17:57:02,122 -   Demands: {'R1': 250, 'R2': 250}
2025-01-05 17:57:02,122 -   Pipeline Losses: {'R1': 0.0, 'R2': 0.0}
2025-01-05 17:57:02,122 -   Output: {'R1': np.float64(217.6437192450952), 'R2': np.float64(218.4457197685402)}
2025-01-05 17:57:02,122 -   Supplied Ratio: {'R1': np.float64(0.87), 'R2': np.float64(0.87)}
2025-01-05 17:57:02,123 -   Metrics: {'util': np.float64(0.8721788780272708), 'loss': np.float64(1.0), 'fairness': np.float64(0.8721788780272708), 'overall': np.float64(0.9169162707177259)}
2025-01-05 17:57:02,123 -   Analysis: {'Time': 6.2178 Seconds, 'Space': 0.0263 MB}
2025-01-05 17:57:02,123 - ----------------------------------------------------------------------------------------------------
2025-01-05 17:57:02,123 - Test Case: Test Case 6: Excess Supply
2025-01-05 17:57:30,534 -   Technique: GeneticAlgorithmAllocation
2025-01-05 17:57:30,534 -   Water Supply: 1500
2025-01-05 17:57:30,534 -   Demands: {'R1': 300, 'R2': 300, 'R3': 300, 'R4': 300}
2025-01-05 17:57:30,534 -   Pipeline Losses: {'R1': 0.05, 'R2': 0.05, 'R3': 0.05, 'R4': 0.05}
2025-01-05 17:57:30,535 -   Output: {'R1': np.float64(301.0204080357636), 'R2': np.float64(307.9009517898805), 'R3': np.float64(312.0521576152708), 'R4': np.float64(310.5454510711913)}
2025-01-05 17:57:30,535 -   Supplied Ratio: {'R1': np.float64(1.0), 'R2': np.float64(1.03), 'R3': np.float64(1.04), 'R4': np.float64(1.04)}
2025-01-05 17:57:30,535 -   Metrics: {'util': np.float64(0.8210126456747374), 'loss': np.float64(0.9589493677162632), 'fairness': np.float64(1.0262658070934219), 'overall': np.float64(0.9308664468148766)}
2025-01-05 17:57:30,535 -   Analysis: {'Time': 5.6155 Seconds, 'Space': 0.0292 MB}
2025-01-05 17:57:30,535 - ----------------------------------------------------------------------------------------------------
2025-01-05 17:57:30,535 - Test Case: Test Case 7: Unequal Demands with High Supply
2025-01-05 17:57:57,578 -   Technique: GeneticAlgorithmAllocation
2025-01-05 17:57:57,578 -   Water Supply: 2000
2025-01-05 17:57:57,578 -   Demands: {'R1': 800, 'R2': 600, 'R3': 400}
2025-01-05 17:57:57,578 -   Pipeline Losses: {'R1': 0.1, 'R2': 0.15, 'R3': 0.05}
2025-01-05 17:57:57,578 -   Output: {'R1': np.float64(870.1674024357607), 'R2': np.float64(699.6326659576044), 'R3': np.float64(413.2374792193524)}
2025-01-05 17:57:57,578 -   Supplied Ratio: {'R1': np.float64(1.09), 'R2': np.float64(1.17), 'R3': np.float64(1.03)}
2025-01-05 17:57:57,578 -   Metrics: {'util': np.float64(0.9915187738063587), 'loss': np.float64(0.8936882429509079), 'fairness': np.float64(1.0956191314519184), 'overall': np.float64(0.9885081953006187)}
2025-01-05 17:57:57,578 -   Analysis: {'Time': 5.5632 Seconds, 'Space': 0.0277 MB}
2025-01-05 17:57:57,579 - ----------------------------------------------------------------------------------------------------
2025-01-05 17:57:57,579 - Test Case: Test Case 8: All Regions with Same Losses
2025-01-05 17:58:24,415 -   Technique: GeneticAlgorithmAllocation
2025-01-05 17:58:24,415 -   Water Supply: 1000
2025-01-05 17:58:24,415 -   Demands: {'R1': 200, 'R2': 200, 'R3': 300, 'R4': 300}
2025-01-05 17:58:24,416 -   Pipeline Losses: {'R1': 0.1, 'R2': 0.1, 'R3': 0.1, 'R4': 0.1}
2025-01-05 17:58:24,416 -   Output: {'R1': np.float64(203.58253995104775), 'R2': np.float64(202.4270359285188), 'R3': np.float64(305.3638576708089), 'R4': np.float64(304.4856164960547)}
2025-01-05 17:58:24,416 -   Supplied Ratio: {'R1': np.float64(1.02), 'R2': np.float64(1.01), 'R3': np.float64(1.02), 'R4': np.float64(1.01)}
2025-01-05 17:58:24,416 -   Metrics: {'util': np.float64(1.0158590500464302), 'loss': np.float64(0.898414094995357), 'fairness': np.float64(1.015719864988511), 'overall': np.float64(0.9747115602611789)}
2025-01-05 17:58:24,416 -   Analysis: {'Time': 5.7347 Seconds, 'Space': 0.0289 MB}
2025-01-05 17:58:24,416 - ----------------------------------------------------------------------------------------------------
2025-01-05 17:58:24,416 - Test Case: Test Case 9: Unequal Losses and Demands
2025-01-05 17:58:51,806 -   Technique: GeneticAlgorithmAllocation
2025-01-05 17:58:51,806 -   Water Supply: 2000
2025-01-05 17:58:51,806 -   Demands: {'R1': 500, 'R2': 400, 'R3': 300, 'R4': 200, 'R5': 100}
2025-01-05 17:58:51,806 -   Pipeline Losses: {'R1': 0.05, 'R2': 0.1, 'R3': 0.15, 'R4': 0.2, 'R5': 0.25}
2025-01-05 17:58:51,807 -   Output: {'R1': np.float64(621.8098721993376), 'R2': np.float64(520.1997861650673), 'R3': np.float64(415.31086956662693), 'R4': np.float64(294.5735577666561), 'R5': np.float64(157.96870669293543)}
2025-01-05 17:58:51,807 -   Supplied Ratio: {'R1': np.float64(1.24), 'R2': np.float64(1.3), 'R3': np.float64(1.38), 'R4': np.float64(1.47), 'R5': np.float64(1.58)}
2025-01-05 17:58:51,807 -   Metrics: {'util': np.float64(1.0049313961953117), 'loss': np.float64(0.8780930045559836), 'fairness': np.float64(1.3962087261592138), 'overall': np.float64(1.0779211581107173)}
2025-01-05 17:58:51,807 -   Analysis: {'Time': 5.8675 Seconds, 'Space': 0.0302 MB}
2025-01-05 17:58:51,807 - ----------------------------------------------------------------------------------------------------
2025-01-05 17:58:51,807 - Test Case: Test Case 10: Zero Demand
2025-01-05 17:59:26,268 -   Technique: GeneticAlgorithmAllocation
2025-01-05 17:59:26,269 -   Water Supply: 500
2025-01-05 17:59:26,269 -   Demands: {'R1': 0, 'R2': 200, 'R3': 300}
2025-01-05 17:59:26,269 -   Pipeline Losses: {'R1': 0.05, 'R2': 0.1, 'R3': 0.2}
2025-01-05 17:59:26,269 -   Output: {'R1': np.float64(127.56041598108234), 'R2': np.float64(40.90909783529987), 'R3': np.float64(201.73815730408182)}
2025-01-05 17:59:26,269 -   Supplied Ratio: {'R1': None, 'R2': np.float64(0.2), 'R3': np.float64(0.67)}
2025-01-05 17:59:26,269 -   Metrics: {'util': np.float64(0.7404153422409281), 'loss': np.float64(0.8983668759131991), 'fairness': np.float64(inf), 'overall': np.float64(inf)}
2025-01-05 17:59:26,269 -   Analysis: {'Time': 6.9953 Seconds, 'Space': 0.0278 MB}
2025-01-05 17:59:26,269 - ----------------------------------------------------------------------------------------------------
2025-01-05 17:59:26,269 - Test Case: Test Case 11: Extreme Shortage
2025-01-05 17:59:53,591 -   Technique: GeneticAlgorithmAllocation
2025-01-05 17:59:53,591 -   Water Supply: 200
2025-01-05 17:59:53,592 -   Demands: {'R1': 500, 'R2': 300}
2025-01-05 17:59:53,592 -   Pipeline Losses: {'R1': 0.1, 'R2': 0.2}
2025-01-05 17:59:53,592 -   Output: {'R1': np.float64(120.70665000260246), 'R2': np.float64(81.46441311378253)}
2025-01-05 17:59:53,592 -   Supplied Ratio: {'R1': np.float64(0.24), 'R2': np.float64(0.27)}
2025-01-05 17:59:53,592 -   Metrics: {'util': np.float64(1.0108553155819249), 'loss': np.float64(0.8581822618849162), 'fairness': np.float64(0.25648067185890666), 'overall': np.float64(0.7311073536710664)}
2025-01-05 17:59:53,592 -   Analysis: {'Time': 5.6121 Seconds, 'Space': 0.0263 MB}
2025-01-05 17:59:53,592 - ----------------------------------------------------------------------------------------------------
2025-01-05 17:59:53,592 - Test Case: Test Case 12: Balanced Scenario
2025-01-05 18:00:24,407 -   Technique: GeneticAlgorithmAllocation
2025-01-05 18:00:24,408 -   Water Supply: 1000
2025-01-05 18:00:24,408 -   Demands: {'R1': 400, 'R2': 300, 'R3': 300}
2025-01-05 18:00:24,408 -   Pipeline Losses: {'R1': 0.05, 'R2': 0.05, 'R3': 0.05}
2025-01-05 18:00:24,408 -   Output: {'R1': np.float64(350.81569636938707), 'R2': np.float64(260.48338806049804), 'R3': np.float64(265.7392758650786)}
2025-01-05 18:00:24,409 -   Supplied Ratio: {'R1': np.float64(0.88), 'R2': np.float64(0.87), 'R3': np.float64(0.89)}
2025-01-05 18:00:24,409 -   Metrics: {'util': np.float64(0.8770383602949637), 'loss': np.float64(0.9561480819852518), 'fairness': np.float64(0.8770382624473521), 'overall': np.float64(0.904726733532281)}
2025-01-05 18:00:24,409 -   Analysis: {'Time': 5.8339 Seconds, 'Space': 0.0280 MB}
2025-01-05 18:00:24,409 - ----------------------------------------------------------------------------------------------------
2025-01-05 18:00:24,409 - Average Time and Space Analysis
2025-01-05 18:00:24,410 - Technique: GeneticAlgorithmAllocation --- Average Time: 6.2841 Seconds --- Average Space: 0.0280 MB
2025-01-05 18:00:24,410 - Execution End
2025-01-05 18:00:24,410 - ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
2025-01-05 18:10:36,745 - Execution Start
2025-01-05 18:10:36,745 - Test Case: Test Case 9: Unequal Losses and Demands
2025-01-05 18:11:06,518 -   Technique: GeneticAlgorithmAllocation
2025-01-05 18:11:06,519 -   Water Supply: 2000
2025-01-05 18:11:06,519 -   Demands: {'R1': 500, 'R2': 400, 'R3': 300, 'R4': 200, 'R5': 100}
2025-01-05 18:11:06,519 -   Pipeline Losses: {'R1': 0.05, 'R2': 0.1, 'R3': 0.15, 'R4': 0.2, 'R5': 0.25}
2025-01-05 18:11:06,519 -   Output: {'R1': np.float64(561.7608556862707), 'R2': np.float64(484.8347247948222), 'R3': np.float64(369.64993198972115), 'R4': np.float64(281.46192657524784), 'R5': np.float64(140.1413136513385)}
2025-01-05 18:11:06,519 -   Supplied Ratio: {'R1': np.float64(1.12), 'R2': np.float64(1.21), 'R3': np.float64(1.23), 'R4': np.float64(1.41), 'R5': np.float64(1.4)}
2025-01-05 18:11:06,519 -   Metrics: {'util': np.float64(0.9189243763487002), 'loss': np.float64(0.8883266406049309), 'fairness': np.float64(1.2752995465429917), 'overall': np.float64(1.0151277198966684)}
2025-01-05 18:11:06,519 -   Analysis: {'Time': 7.1197 Seconds, 'Space': 0.0308 MB}
2025-01-05 18:11:06,519 - ----------------------------------------------------------------------------------------------------
2025-01-05 18:11:06,519 - Test Case: Test Case 10: Zero Demand
2025-01-05 18:11:33,101 -   Technique: GeneticAlgorithmAllocation
2025-01-05 18:11:33,102 -   Water Supply: 500
2025-01-05 18:11:33,102 -   Demands: {'R1': 0, 'R2': 200, 'R3': 300}
2025-01-05 18:11:33,102 -   Pipeline Losses: {'R1': 0.05, 'R2': 0.1, 'R3': 0.2}
2025-01-05 18:11:33,102 -   Output: {'R1': 0, 'R2': np.float64(177.36751941072674), 'R3': np.float64(298.38354079945105)}
2025-01-05 18:11:33,102 -   Supplied Ratio: {'R1': None, 'R2': np.float64(0.89), 'R3': np.float64(0.99)}
2025-01-05 18:11:33,102 -   Metrics: {'util': np.float64(0.9515021204203556), 'loss': np.float64(0.8451730797980742), 'fairness': np.float64(0.9407246998592353), 'overall': np.float64(0.911053730034221)}
2025-01-05 18:11:33,102 -   Analysis: {'Time': 5.6434 Seconds, 'Space': 0.0263 MB}
2025-01-05 18:11:33,102 - ----------------------------------------------------------------------------------------------------
2025-01-05 18:11:33,102 - Average Time and Space Analysis
2025-01-05 18:11:33,102 - Technique: GeneticAlgorithmAllocation --- Average Time: 6.3815 Seconds --- Average Space: 0.0285 MB
2025-01-05 18:11:33,102 - Execution End
2025-01-05 18:11:33,102 - ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
